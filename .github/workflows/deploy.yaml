name: node
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Descripci√≥n de la variable'
        required: true


env:
  NAMESPACE: microfront-uat
  CLUSTER_NAME: AZ-EASTUS-BSP-UAT-NEWOBW-AKS
  CLUSTER_RESOURCE_GROUP: az-eastus-bsp-uat-newobw-all-rg

jobs:
  run:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash

    steps:

      - name: Descargar Repositorio
        uses: actions/checkout@v4
      
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install
        working-directory: ./app

      - name: Build
        run: npm run build:uat
        working-directory: ./app

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      # - name: Extraer nombre de repositorio
      #   id: repo-name
      #   run: |
      #     SERVICE=$(echo ${{ github.repository }} | cut -d'/' -f2 | cut -d'-' -f3)
      #     echo "::set-output name=repo::$SERVICE"

      - name: Build and push Docker image
        run: |
          docker build . -t ${{ vars.REGISTRY_SERVER }}/arsloginshell:${{ github.event.inputs.tag }}
          docker push ${{ vars.REGISTRY_SERVER }}/arsloginshell:${{ github.event.inputs.tag }}


      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.24'
  
      - uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
          use-kubelogin: 'true'

      # Create imagepullsecret for Azure Container registry (ACR)
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ vars.REGISTRY_SERVER }}
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ vars.REGISTRY_SERVER }}-registry-connection
          namespace: ${{ env.NAMESPACE }}

      # Baking the helm chart to generate the manifests to deploy
      - uses: azure/k8s-bake@v3
        with:
          renderEngine: 'helm'
          helmChart: './helm/' 
          helm-version: 'latest'
          overrides: |
            name: arsloginshell
            image.repository: ${{ vars.REGISTRY_SERVER }}/arsloginshell
            image.tag: ${{ github.event.inputs.tag }}
        id: bake

      # # Deploy app to AKS
      # - uses: azure/k8s-deploy@v5
      #   with:
      #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
      #     imagepullsecrets: |
      #       ${{ env.REGISTRY_NAME }}-registry-connection
      #     namespace: ${{ env.NAMESPACE }}