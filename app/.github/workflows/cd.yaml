name: CD Workflow
on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag'
        required: true
        type: string
      cluster_name:
        description: 'Nombre de Cluster'
        required: true
        type: string
      cluster_resource_group:
        description: 'Nombre del RG del CLuster'
        required: true
        type: string
      namespace: 
        description: 'Namespace'
        required: true
        type: string
      repositorio: 
        description: 'Nombre de Repositorio'
        required: true
        type: string
      container_port: 
        description: 'Puerto del contenedor'
        required: true
        type: string
      container_path: 
        description: 'Path del contenedor'
        required: true
        type: string


jobs:

  cd-deploy:

    name: Deploy on AKS
    runs-on: npm-runner
    defaults:
      run:
        shell: bash

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.24'
  
      - uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ inputs.cluster_name }}
          resource-group: ${{ inputs.cluster_resource_group }}
          use-kubelogin: 'true'

      - run: |
          kubectl create namespace ${{ inputs.namespace }} --dry-run=client -o json | kubectl apply -f -


      #Create imagepullsecret for Azure Container registry (ACR)
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ secrets.REGISTRY_LOGIN_SERVER }}-registry-connection
          namespace: ${{ inputs.namespace }}


      - uses: azure/setup-helm@v4.2.0
        with:
          version: '3.13.3' # default is latest (stable)

      - name: Create symbolic link for helm
        run: ln -s /runner/_work/_tool/helm/3.13.3/x64/linux-amd64/helm /runner/_work/_tool/helm/3.13.3/x64/helm

      # Baking the helm chart to generate the manifests to deploy
      - uses: azure/k8s-bake@v3
        with:
          renderEngine: 'helm'
          helmChart: './.github/helm/'
          helm-version: '3.13.3' #v3.15.1
          # overrideFiles: './.github/helm/values.yaml'
          overrides: |
            name: ${{ inputs.repositorio }}
            deployment.name: ${{ inputs.repositorio }}
            deployment.replicaCount: 1
            deployment.containerPort: ${{ inputs.container_port }}
            image.repository: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ inputs.repositorio }}
            image.tag: ${{ inputs.tag }}
            service.name: ${{ inputs.repositorio }}
            service.port: ${{ inputs.container_port }}
            service.type: ClusterIP
            ingress.name: ${{ inputs.repositorio }}-ingress
            ingress.path: ${{ inputs.container_path }}
            ingress.port: ${{ inputs.container_port }}
        id: bake


      # Deploy app to AKS
      - uses: azure/k8s-deploy@v5
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          imagepullsecrets: |
            ${{ secrets.REGISTRY_LOGIN_SERVER }}-registry-connection
          namespace: ${{ inputs.namespace }}